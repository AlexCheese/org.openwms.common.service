on: [push]

env:
  MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
  PUSHKEY: ${{ secrets.PUSHKEY }}
  GITHUB_TOKEN: ${{ secrets.PUSHKEY }}

jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: Build & Test Microservice
    services:
      rabbitmq:
        image: rabbitmq:3.8
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
          - 15672:15672
      postgres:
        image: openwms/postgres-image:latest
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build
        run: >
          ./mvnw clean verify
          -DsurefireArgs=-Dspring.profiles.active=ASYNCHRONOUS,TEST
          -Dspring.rabbitmq.host=localhost
          -Dci.buildNumber=$GITHUB_RUN_NUMBER
          -U -B $MAVEN_OPTS
      - name: Install tools
        run: |
          sudo apt-get install graphviz
          git config --global user.email "ci@example.com"
          git config --global user.name "CI Server"
      - name: Site
        run: >
          ./mvnw site scm-publish:publish-scm
          -DM2_REPO_DIR=/home/runner/.m2/repository
          -DsurefireArgs=-Dspring.profiles.active=ASYNCHRONOUS,TEST,TESTPG
          -Dargs=-Dspring.profiles.active=ASYNCHRONOUS,TEST,TESTPG
          -Dspring.datasource.url=jdbc:postgresql://localhost:5432/testdb
          -Dspring.rabbitmq.host=localhost
          -DDB_HOST=localhost
          -DDB_USERNAME=KARL
          -DDB_PASSWORD=KARL
          -Dscmuser=$PUSHKEY
          -Dscmpublish.pubScmUrl=scm:git:https://$PUSHKEY@github.com/openwms/org.openwms.common.service.git
          -DdeveloperConnectionUrl=scm:git:https://$PUSHKEY@github.com/openwms/org.openwms.common.service.git
          -Dci.buildNumber=$GITHUB_RUN_NUMBER
          -Pschemagen -B $MAVEN_OPTS
      - name: Sonar
        run: >
          ./mvnw verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.7.0.1746:sonar
          -Dsonar.login=$SONAR_TOKEN
          -Dspring.rabbitmq.host=localhost
          -DsurefireArgs=-Dspring.profiles.active=ASYNCHRONOUS,TEST
          -Dci.buildNumber=$GITHUB_RUN_NUMBER
          -DSONAR_TOKEN=$SONAR_TOKEN
          -Pcoverage -B $MAVEN_OPTS
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Build Image
        run: ./scripts/docker_build
      - name: Upload Image
        run: ./scripts/docker_push
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Confluence Update
        run: |
          ./scripts/toolsetup
          ./docToolchain-master/bin/doctoolchain doc exportGithubIssues publishToConfluence
        env:
          ATLASSIAN_USER: ${{ secrets.ATLASSIAN_USER }}
          ATLASSIAN_PASSWORD: ${{ secrets.ATLASSIAN_PASSWORD }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: jars
          path: |
            target/openwms-common-service*.jar
#      - name: Archive documentation
#        uses: actions/upload-artifact@v2
#        with:
#          name: site
#          path: target/site/**/*
