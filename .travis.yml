language: java

jdk:
  - openjdk8

cache:
  directories:
    - .autoconf
    - $HOME/.m2

services:
  - docker
  - rabbitmq
  - postgresql

before_script:
  - psql -c 'create database TESTDB;' -U postgres

addons:
  sonarcloud:
    organization: "openwms-github"
  postgresql: "9.6"

jobs:
  include:
    - stage: test
      script:
        - mvn package -DsurefireArgs=-Dspring.profiles.active=ASYNCHRONOUS,TEST -Dci.buildNumber=$TRAVIS_BUILD_NUMBER -U -B
    - stage: quality assurance
      script:
        - mvn package sonar:sonar -DsurefireArgs=-Dspring.profiles.active=ASYNCHRONOUS,TEST -Dmaven.test.error.ignore=true -Dmaven.test.failure.ignore=true -Dci.buildNumber=$TRAVIS_BUILD_NUMBER -Psonar -B
    - stage: documentation
      script:
        - mvn site scm-publish:publish-scm -DsurefireArgs=-Dspring.profiles.active=ASYNCHRONOUS,TEST -Denforcer.skip=true -Dscmpublish.pubScmUrl=scm:git:https://${PUSHKEY}@github.com/openwms/org.openwms.common.service.git -DdeveloperConnectionUrl=scm:git:https://${PUSHKEY}@github.com/openwms/org.openwms.common.service.git -Dci.buildNumber=$TRAVIS_BUILD_NUMBER -B
    - stage: deploy
      script:
        - mvn clean package -DsurefireArgs=-Dspring.profiles.active=ASYNCHRONOUS,TEST -Denforcer.skip=true -DskipTests=true -Dci.buildNumber=$TRAVIS_BUILD_NUMBER -Prelease,gpg -B
    - stage: Generate Schema Documentation
      if: $TRAVIS_EVENT_TYPE = cron
      script:
        - mvn clean install -DsurefireArgs=-Dspring.profiles.active=ASYNCHRONOUS,TEST,TESTPG -Denforcer.skip=true -DskipTests=true -Dci.buildNumber=$TRAVIS_BUILD_NUMBER -Prelease,gpg,schemagen -B

after_success:
  - docker build -t openwms/org.openwms.common.service:latest .

deploy:
  provider: script
  script: bash docker_push
  on:
    branch: master
